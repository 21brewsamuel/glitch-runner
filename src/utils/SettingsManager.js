import { gameState } from "./GameState.js"; export class SettingsManager { constructor() { this.elements = {}; this.initializeElements(); this.setupEventListeners(); this.loadSettings(); } initializeElements() { this.elements.settingsPanel = document.getElementById("settings-panel"); this.elements.settingsButton = document.getElementById("settings-button"); this.elements.closeSettingsButton = document.getElementById("close-settings"); this.elements.soundToggle = document.getElementById("sound-toggle"); this.elements.musicToggle = document.getElementById("music-toggle"); this.elements.hapticToggle = document.getElementById("haptic-toggle"); this.elements.difficultySelect = document.getElementById("difficulty-select"); } setupEventListeners() { if (this.elements.settingsButton) { this.elements.settingsButton.addEventListener("click", () => { this.showSettingsPanel(); }); } if (this.elements.closeSettingsButton) { this.elements.closeSettingsButton.addEventListener("click", () => { this.hideSettingsPanel(); }); } if (this.elements.soundToggle) { this.elements.soundToggle.addEventListener("change", (e) => { gameState.updateSetting("soundEnabled", e.target.checked); }); } if (this.elements.musicToggle) { this.elements.musicToggle.addEventListener("change", (e) => { gameState.updateSetting("musicEnabled", e.target.checked); }); } if (this.elements.hapticToggle) { this.elements.hapticToggle.addEventListener("change", (e) => { gameState.updateSetting("hapticEnabled", e.target.checked); }); } if (this.elements.difficultySelect) { this.elements.difficultySelect.addEventListener("change", (e) => { gameState.updateSetting("difficulty", e.target.value); }); } } showSettingsPanel() { if (this.elements.settingsPanel) { this.elements.settingsPanel.style.display = "flex"; this.updateSettingsDisplay(); } } hideSettingsPanel() { if (this.elements.settingsPanel) { this.elements.settingsPanel.style.display = "none"; } } loadSettings() { this.updateSettingsDisplay(); } updateSettingsDisplay() { const settings = gameState.settings; if (this.elements.soundToggle) { this.elements.soundToggle.checked = settings.soundEnabled; } if (this.elements.musicToggle) { this.elements.musicToggle.checked = settings.musicEnabled; } if (this.elements.hapticToggle) { this.elements.hapticToggle.checked = settings.hapticEnabled; } if (this.elements.difficultySelect) { this.elements.difficultySelect.value = settings.difficulty; } } } export const settingsManager = new SettingsManager();
